{
  "filters": [
    {
      "name": "C++ files",
      "description": "Files that are C++ files",
      "pattern": [
        ".h",
        ".cc"
      ],
      "default": "included"
    },
    {
      "name": "test",
      "description": "Files that are test files",
      "pattern": [
        "test"
      ],
      "default": "excluded"
    },
    {
      "name": "tools",
      "description": "Files that are tools",
      "pattern": [
        "codelab/",
        "/tools/"
      ],
      "default": "excluded"
    }
  ],
  "metrics": [
    {
      "name": "raw_ptr",
      "description": "The number of raw_ptr<T>",
      "script": "git grep 'raw_ptr<' | cut -d: -f1",
      "file": "raw_ptr"
    },
    {
      "name": "raw_ref",
      "description": "The number of raw_ref<T>",
      "script": "git grep 'raw_ref<' | cut -d: -f1",
      "file": "raw_ref"
    },
    {
      "name": "RAW_PTR_EXCLUSION",
      "description": "The number of RAW_PTR_EXCLUSION",
      "script": "git grep 'raw_ref<' | cut -d: -f1",
      "file": "raw_ptr_exclusion"
    },
    {
      "name": "DanglingUntriaged",
      "description": "The number of RAW_PTR_EXCLUSION",
      "script": "git grep 'DanglingUntriaged' | cut -d: -f1",
      "file": "dangling_untriaged"
    },
    {
      "name": "AllowPtrArithmetic",
      "description": "The number of AllowPtrArithmetic",
      "script": "git grep 'AllowPtrArithmetic' | cut -d: -f1",
      "file": "allow_ptr_arithmetic"
    },
    {
      "name": "TODO",
      "description": "The number of TODO",
      "script": "git grep 'TODO' | cut -d: -f1",
      "file": "todo"
    },
    {
      "name": "allow_unsafe_buffers",
      "description": "The number of files with allow_unsafe_buffers",
      "script": "git grep 'allow_unsafe_buffers' | cut -d: -f1",
      "file": "allow_unsafe_buffers"
    },
    {
      "name": "file",
      "description": "The number of c++ files in production code",
      "script": "git ls-files",
      "file": "file"
    },
    {
      // Questions: Should we count the number of occurrences of
      // UNSAFE_BUFFERS(...) or the number of files that contain
      // UNSAFE_BUFFERS(...)? The current implementation counts the
      // number of occurrences.
      "name": "UNSAFE_BUFFERS",
      "description": "The occurences of UNSAFE_BUFFERS(...)",
      "script": "git grep 'UNSAFE_BUFFERS(' | cut -d: -f1",
      "file": "unsafe_buffers"
    },
    {
      // Questions: Should we count the number of occurrences of
      // [[clang::unsafe_buffer_usage]] or the number of files that contain
      // [[clang::unsafe_buffer_usage]]? The current implementation counts the
      // number of occurrences.
      "name": "[[clang::unsafe_buffer_usage]]",
      "description": "The occurences of [[clang::unsafe_buffer_usage]]",
      "script": "git grep '\\[\\[clang::unsafe_buffer_usage\\]\\]' | cut -d: -f1",
      "file": "clang_unsafe_buffer_usage",
    }
  ]
}
